{"version":3,"sources":["App.js","index.js"],"names":["consts","Game","connect","state","ownProps","congratulation","foundation","cards","length","id","className","Stock","Foundation","Tableau","style","visibility","href","rest","stock","flopped","map","card","key","JSON","stringify","suit","number","Card","stack","turned","locked","last","piles","pile","pileIndex","DropSite","type","index","pileType","visible","drop","tableau","UnconnectedCard","rotation","turn","bind","dragStart","dragEnd","this","props","flop","lastTime","slideBackAnimation","time","delta","Math","min","setState","requestAnimationFrame","ev","dataTransfer","setData","transform","draggable","onDragStart","onDragEnd","onClick","React","Component","dispatch","Heart","zoom","width","height","viewBox","d","Tile","Clover","cx","cy","r","points","Pike","UnconnectedDropSite","allowDrop","preventDefault","data","parse","getData","onDrop","onDragOver","targetPileType","targetPileIndex","store","i","push","deck","a","j","floor","random","shuffle","pop","shift","initialState","mainReducer","combineReducers","action","first","undefined","Object","assign","topFlop","concat","slice","match","targetCard","draggedCard","sourcePileIndex","findIndex","reduce","accumulated","currentPile","tableauWithoutMovingCards","movingCards","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"4RAKMA,G,MACQ,cADRA,EAEK,UAFLA,EAIG,QAJHA,EAKI,SALJA,EAME,OANFA,EAOE,OAMFC,EAyBGC,aAXiB,SAACC,EAAOC,GAC9B,MAAO,CACLC,eACuC,KAArCF,EAAMG,WAAW,GAAGC,MAAMC,QACW,KAArCL,EAAMG,WAAW,GAAGC,MAAMC,QACW,KAArCL,EAAMG,WAAW,GAAGC,MAAMC,QACW,KAArCL,EAAMG,WAAW,GAAGC,MAAMC,UAKzBN,EAxBiB,SAAC,GAAD,IAAEG,EAAF,EAAEA,eAAF,OACtB,yBAAKI,GAAG,aACN,yBAAKC,UAAU,UACb,kBAACC,EAAD,MACA,kBAACC,EAAD,OAEF,kBAACC,EAAD,MACA,yBAAKH,UAAU,iBACVI,MAAO,CAACC,WAAYV,EAAiB,UAAY,WACpD,qDAA0B,uBAAGW,KAAK,gCAAR,UAA1B,kBAkBFL,EAmCGT,aAPiB,SAACC,EAAOC,GAC9B,MAAO,CACLa,KAAMd,EAAMe,MAAMD,KAClBE,QAAShB,EAAMe,MAAMC,WAIlBjB,EAlCkB,SAAC,GAAD,IAAEe,EAAF,EAAEA,KAAME,EAAR,EAAQA,QAAR,OACvB,yBAAKT,UAAU,SACb,yBAAKA,UAAU,QACZO,EAAKG,KAAI,SAAAC,GAAI,OACZ,yBAAKX,UAAU,gBACVY,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,UACnD,kBAACC,EAAD,CAAML,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,SAChDD,KAAMJ,EAAKI,KAAMC,OAAQL,EAAKK,OAC9BE,OAAO,EACPC,OAAQR,EAAKQ,OAAQC,OAAQT,EAAKS,OAAQC,MAAM,SAI5D,yBAAKrB,UAAU,QACZS,EAAQC,KAAI,SAAAC,GAAI,OACf,yBAAKX,UAAU,gBACVY,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,UACnD,kBAACC,EAAD,CAAML,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,SAChDD,KAAMJ,EAAKI,KAAMC,OAAQL,EAAKK,OAC9BE,OAAO,EACPC,OAAQR,EAAKQ,OAAQC,OAAQT,EAAKS,OAAQC,KAAMV,EAAKU,gBAiBjEnB,EA0BGV,aANiB,SAACC,EAAOC,GAC9B,MAAO,CACL4B,MAAO7B,EAAMG,cAIVJ,EAzBuB,SAAC,GAAD,IAAE8B,EAAF,EAAEA,MAAF,OAC5B,yBAAKtB,UAAU,cACZsB,EAAMZ,KAAI,SAACa,EAAMC,GAAP,OACT,yBAAKxB,UAAU,OAAOY,IAAKY,GACxBD,EAAK1B,MAAMa,KAAI,SAAAC,GAAI,OAClB,yBAAKX,UAAU,gBACVY,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,UACnD,kBAACC,EAAD,CAAML,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,SAChDD,KAAMJ,EAAKI,KAAMC,OAAQL,EAAKK,OAC9BG,OAAQR,EAAKQ,OAAQC,OAAQT,EAAKS,OAAQC,KAAMV,EAAKU,WAG/D,kBAACI,EAAD,CAAUb,IAAKC,KAAKC,UAAU,CAACY,KAAKpC,EAAkBqC,MAAMH,IAClDI,SAAUtC,EAAmBkC,UAAWA,EAAWK,QAASN,EAAKO,eAe/E3B,EA2BGX,aANiB,SAACC,EAAOC,GAC9B,MAAO,CACL4B,MAAO7B,EAAMsC,WAIVvC,EA1BoB,SAAC,GAAD,IAAE8B,EAAF,EAAEA,MAAF,OACzB,yBAAKtB,UAAU,WACZsB,EAAMZ,KAAI,SAACa,EAAMC,GAAP,OACT,yBAAKxB,UAAU,OAAOY,IAAKY,GACxBD,EAAK1B,MAAMa,KAAI,SAACC,EAAMgB,GAAP,OACd,yBAAK3B,UAAU,gBACVY,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,UACnD,kBAACC,EAAD,CAAML,IAAKC,KAAKC,UAAU,CAACC,KAAKJ,EAAKI,KAAKC,OAAOL,EAAKK,SAChDD,KAAMJ,EAAKI,KAAMC,OAAQL,EAAKK,OAC9BE,OAAO,EACPC,OAAQR,EAAKQ,OAAQC,OAAQT,EAAKS,OAAQC,KAAMV,EAAKU,WAG/D,kBAACI,EAAD,CAAUb,IAAKC,KAAKC,UAAU,CAACY,KAAKpC,EAAeqC,MAAMH,IAC/CI,SAAUtC,EAAgBkC,UAAWA,EAAWK,QAASN,EAAKO,eAmB5Eb,EAAQ,WAAO,IACbe,EADY,YAEhB,cAA0D,IAAD,EAA5CjB,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,OAAQE,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,KAAO,4BACvD,4CAAM,CAACN,OAAMC,SAAQE,QAAOC,SAAQC,SAAQC,WAEvC5B,MAAQ,CACXwC,SAAUd,EAAS,GAAK,KAG1B,EAAKe,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBATwC,EAFzC,oEAcR,IAAD,OACL,IAAwB,IAArBG,KAAKC,MAAMrB,MACZoB,KAAKC,MAAMC,WACR,CACH,IAAyB,IAAtBF,KAAKC,MAAMpB,QAAmBmB,KAAKC,MAAMnB,OAC1C,OAGF,IAAIqB,EAAW,KAETC,EAAsB,SAAAC,GAC1B,IAAIV,EAAW,KACf,GAAgB,OAAbQ,EAAmB,CACpB,IAAMG,EAA4B,IAAnBD,EAAOF,GACtBR,EAAWY,KAAKC,IAAI,EAAG,EAAKrD,MAAMwC,SAAWW,GAC7C,EAAKG,SAAS,CAACd,aAEjBQ,EAAWE,EACK,IAAbV,GAAgBe,sBAAsBN,IACxCP,KAAKG,MAERU,sBAAsBN,MAnCV,gCAuCNO,GACRA,EAAGC,aAAaC,QAAQ,aAActC,KAAKC,UAAU,CACnDC,KAAMuB,KAAKC,MAAMxB,KACjBC,OAAQsB,KAAKC,MAAMvB,UAErBsB,KAAKC,MAAMH,cA5CG,8BA+CRa,GACNX,KAAKC,MAAMF,YAhDG,+BAoDd,IAAItB,EACJ,OAAOuB,KAAKC,MAAMxB,MAChB,KAAKzB,EACHyB,EAAO,kBAAC,EAAD,MACP,MACF,KAAKzB,EACHyB,EAAO,kBAAC,EAAD,MACP,MACF,KAAKzB,EACHyB,EAAO,kBAAC,EAAD,MACP,MACF,KAAKzB,EACHyB,EAAO,kBAAC,EAAD,MAGX,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,qBACVI,MAAO,CAACgD,UAAU,WAAD,OAAad,KAAK7C,MAAMwC,SAAxB,SACjBoB,WAAiC,IAAtBf,KAAKC,MAAMnB,OACtBkC,YAAahB,KAAKF,UAClBmB,UAAWjB,KAAKD,SACnB,6BACE,wBAAIrC,UAAWsC,KAAKC,MAAMxB,MAAOuB,KAAKC,MAAMvB,QAC3CD,IAGL,yBAAKf,UAAW,sBAA6C,IAAtBsC,KAAKC,MAAMnB,OAAmB,WAAa,IAC7EhB,MAAO,CAACgD,UAAU,WAAD,OAAad,KAAK7C,MAAMwC,SAAS,IAAjC,SACjBuB,QAASlB,KAAKJ,YAjFT,GACYuB,IAAMC,WAwGpC,OAAOlE,YAAQ,MAlBY,SAACmE,EAAUjE,GACpC,MAAO,CACL0C,UAAW,WACTuB,EAAS,CACPjC,KAAM,aACNX,KAAMrB,EAASqB,KACfC,OAAQtB,EAASsB,OACjBK,KAAM3B,EAAS2B,QAGnBgB,QAAS,WACPsB,EAAS,CAAEjC,KAAM,cAEnBc,KAAM,WACJmB,EAAS,CAAEjC,KAAM,aAIhBlC,CAAkCwC,GAzG7B,GA4GR4B,EAAQ,SAAC,GAAD,QAAEC,YAAF,gBACZ,yBAAK7D,UAAU,WACV8D,OAAgB,IAATD,EAAgB,GAAK,GAAIE,QAAiB,IAATF,EAAgB,GAAK,GAC7DG,QAAQ,aACX,0BAAMhE,UAAU,QACViE,EAAE,gFASNC,EAAO,SAAC,GAAD,QAAEL,YAAF,gBACX,yBAAK7D,UAAU,WACV8D,OAAgB,IAATD,EAAgB,GAAK,GAAIE,QAAiB,IAATF,EAAgB,GAAK,GAC7DG,QAAQ,aACX,0BAAMhE,UAAU,OACViE,EAAE,gEASNE,EAAS,SAAC,GAAD,QAAEN,YAAF,gBACb,yBAAK7D,UAAU,WACV8D,OAAgB,IAATD,EAAgB,GAAK,GAAIE,QAAiB,IAATF,EAAgB,GAAK,GAC7DG,QAAQ,aACX,4BAAQhE,UAAU,SAASoE,GAAG,KAAKC,GAAG,IAAIC,EAAE,QAC5C,4BAAQtE,UAAU,SAASoE,GAAG,IAAIC,GAAG,KAAKC,EAAE,QAC5C,4BAAQtE,UAAU,SAASoE,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC7C,6BAAStE,UAAU,SAASuE,OAAO,yBAIjCC,EAAO,SAAC,GAAD,QAAEX,YAAF,gBACX,yBAAK7D,UAAU,WACV8D,OAAgB,IAATD,EAAgB,GAAK,GAAIE,QAAiB,IAATF,EAAgB,GAAK,GAC7DG,QAAQ,aACX,0BAAMhE,UAAU,OACViE,EAAE,+EAMR,6BAASjE,UAAU,OAAOuE,OAAO,yBAO/B9C,EAAY,WAAO,IACjBgD,EADgB,YAEpB,cAAmD,IAAD,EAArC7C,EAAqC,EAArCA,SAAUJ,EAA2B,EAA3BA,UAAWK,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,KAAO,4BAChD,4CAAM,CAACF,WAAUJ,YAAWK,UAASC,WAEhC4C,UAAY,EAAKA,UAAUvC,KAAf,gBACjB,EAAKL,KAAO,EAAKA,KAAKK,KAAV,gBAJoC,EAF9B,uEASVc,GACRA,EAAG0B,mBAVe,2BAaf1B,GACHA,EAAG0B,iBACH,IAAIC,EAAO/D,KAAKgE,MAAM5B,EAAGC,aAAa4B,QAAQ,SAC9CxC,KAAKC,MAAMT,KAAK8C,EAAK7D,KAAM6D,EAAK5D,UAhBd,+BAoBlB,OACE,yBAAKhB,UAAU,aACVI,MAAO,CAACC,WAAYiC,KAAKC,MAAMV,QAAU,UAAY,UACrDkD,OAAQzC,KAAKR,KAAMkD,WAAY1C,KAAKoC,WACvC,sCAxBc,GACYjB,IAAMC,WA+CxC,OAAOlE,YAAQ,MAhBY,SAACmE,EAAUjE,GACpC,MAAO,CACLoC,KAAM,SAACf,EAAMC,GACX2C,EAAS,CACPjC,KAAM,aAERiC,EAAS,CACPjC,KAAM,OACNuD,eAAgBvF,EAASkC,SACzBsD,gBAAiBxF,EAAS8B,UAC1BT,OACAC,eAKDxB,CAAkCiF,GAhDzB,GAsDZU,EAAS,WACb,IAAItF,EAAS,WAwBX,IAAIA,EAvBJ,WAEE,IADA,IAAIA,EAAQ,GACJuF,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC3B,IAAIpE,EAASoE,EACJ,KAANA,IAAUpE,EAAS,KACb,KAANoE,IAAUpE,EAAS,KACb,KAANoE,IAAUpE,EAAS,KACb,KAANoE,IAAUpE,EAAS,KACtBnB,EAAMwF,KAAK,CAACtE,KAAMzB,EAAc0B,WAChCnB,EAAMwF,KAAK,CAACtE,KAAMzB,EAAa0B,WAC/BnB,EAAMwF,KAAK,CAACtE,KAAMzB,EAAe0B,WACjCnB,EAAMwF,KAAK,CAACtE,KAAMzB,EAAa0B,WAEjC,OAAOnB,EAUGyF,GAEZ,OATA,SAAiBC,GACf,IAAK,IAAIH,EAAIG,EAAEzF,OAAQsF,EAAGA,IAAK,CAC7B,IAAII,EAAI3C,KAAK4C,MAAM5C,KAAK6C,SAAWN,GADN,EAEV,CAACG,EAAEC,GAAID,EAAEH,EAAI,IAA/BG,EAAEH,EAAI,GAFsB,KAElBG,EAAEC,GAFgB,MAOjCG,CAAQ9F,GACDA,EA1BI,GA6Bb,SAAS+F,EAAI/F,GAAwB,IAAjBsB,EAAgB,wDAClC,OAAGA,EACM,eAAItB,EAAMgG,QAAjB,CAA0B1E,QAAQ,EAAMC,QAAQ,EAAOC,MAAM,IAEtD,eAAIxB,EAAMgG,QAAjB,CAA0B1E,QAAQ,EAAOC,QAAQ,EAAMC,MAAM,IAIjE,IAAMyE,EAAe,CACnB/D,QAAS,CACP,CAACD,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAO,KACjC,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,KAC7C,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,KACzD,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,KACrE,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,KACjF,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,KAC7F,CAACiC,MAAM,EAAOjC,MAAO,CAAC+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAQ+F,EAAI/F,GAAO,MAE3GW,MAAO,CACLD,KAAK,YAAKV,EAAMa,KAAI,SAAAC,GAAI,MAAK,CAC3BI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,QAAQ,EACRC,QAAQ,EACRC,MAAM,OAERZ,QAAS,IAEXb,WAAY,CACV,CAACkC,MAAM,EAAOjC,MAAO,IACrB,CAACiC,MAAM,EAAOjC,MAAO,IACrB,CAACiC,MAAM,EAAOjC,MAAO,IACrB,CAACiC,MAAM,EAAOjC,MAAO,MAmSnBkG,EAAcC,YAAgB,CAClCxF,MAhSmB,WAAyC,IAAxCf,EAAuC,uDAA/BqG,EAAatF,MAAOyF,EAAW,uCAC3D,OAAQA,EAAOvE,MACb,IAAK,OACH,IAAMnB,EAAI,sBACLd,EAAMgB,QAAQC,KACf,SAAAC,GAAI,MAAK,CACPI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,QAAQ,EACRC,QAAQ,OANJ,YASL3B,EAAMc,OAGPE,EAAU,GACRyF,EAAQ3F,EAAKqF,MAKnB,YAJaO,IAAVD,GACDzF,EAAQ4E,KAAKe,OAAOC,OAAO,GAAIH,EAAO,CAAC/E,QAAQ,EAAMC,QAAQ,EAAOC,MAAM,KAGrE,CACLd,OACAE,WAGJ,IAAK,OACH,IAAM6F,EAAU7G,EAAMgB,QAAQhB,EAAMgB,QAAQX,OAAS,GACrD,QAAeqG,IAAZG,GAAyBA,EAAQvF,OAASkF,EAAOlF,MAAQuF,EAAQtF,SAAWiF,EAAOjF,OAAQ,CAE5F,IAAIP,EAAU,GAcd,OAbGhB,EAAMgB,QAAQX,OAAS,IACxBW,EAAUA,EAAQ8F,OAAO9G,EAAMgB,QAAQ+F,MAAM,GAAI,KAEhD/G,EAAMgB,QAAQX,OAAS,GACxBW,EAAQ4E,KAAKe,OAAOC,OAClB,GACA5G,EAAMgB,QAAQhB,EAAMgB,QAAQX,OAAO,GACnC,CACEsB,QAAQ,EACRC,MAAM,KAIL,CACLd,KAAMd,EAAMc,KACZE,WAIJ,OAAOhB,EAET,QACE,OAAOA,IA4OXG,WAvOwB,WAA8C,IAA7CH,EAA4C,uDAApCqG,EAAalG,WAAYqG,EAAW,uCACrE,OAAQA,EAAOvE,MACb,IAAK,aAAc,CACjB,IAAmB,IAAhBuE,EAAO5E,KACR,OAAO5B,EAET,SAASgH,EAAMC,EAAYC,GACzB,YAAkBR,IAAfO,GAAmD,MAAvBC,EAAY3F,aAGzBmF,IAAfO,IAGKA,EAAW3F,OAAS4F,EAAY5F,OAEd,MAAtB2F,EAAW1F,QAAyC,IAAvB2F,EAAY3F,QACnB,KAAtB0F,EAAW1F,QAAwC,MAAvB2F,EAAY3F,QAClB,MAAtB0F,EAAW1F,QAAyC,MAAvB2F,EAAY3F,QACnB,MAAtB0F,EAAW1F,QAAyC,MAAvB2F,EAAY3F,QACzC0F,EAAW1F,OAAS,IAAM2F,EAAY3F,SAI5C,IAAI2F,EAAc,CAAC5F,KAAMkF,EAAOlF,KAAMC,OAAQiF,EAAOjF,QACrD,OAAOvB,EAAMiB,KACX,SAAAa,GAAI,MAAK,CACPO,KAAM2E,EAAMlF,EAAK1B,MAAM0B,EAAK1B,MAAMC,OAAO,GAAI6G,GAC7C9G,MAAM,YAAK0B,EAAK1B,WAItB,IAAK,WACH,OAAOJ,EAAMiB,KACX,SAAAa,GAAI,MAAK,CACPO,MAAM,EACNjC,MAAM,YAAK0B,EAAK1B,WAItB,IAAK,OAAQ,CACX,SAAS4G,EAAM9F,EAAMI,EAAMC,GACzB,YAAgBmF,IAATxF,GAAsBA,EAAKI,OAASA,GAAQJ,EAAKK,SAAWA,EAIrE,IAAM4F,EAAkBnH,EAAMoH,WAC5B,SAAAtF,GAAI,OAAIkF,EAAMlF,EAAK1B,MAAM0B,EAAK1B,MAAMC,OAAO,GAAImG,EAAOlF,KAAMkF,EAAOjF,WAGrE,OAAOvB,EAAMiB,KACX,SAACa,EAAMC,GAEL,GAAGyE,EAAOhB,iBAAmB3F,GAAqB2G,EAAOf,kBAAoB1D,EAC3E,MAAO,CACLM,MAAM,EACNjC,MAAM,GAAD,mBACA0B,EAAK1B,MAAMa,KACZ,SAAAC,GAAI,MAAK,CACPI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,QAAQ,EACRC,QAAQ,EACRC,MAAM,OAPP,CAUH,CACEN,KAAMkF,EAAOlF,KACbC,OAAQiF,EAAOjF,OACfG,QAAQ,EACRC,QAAQ,EACRC,MAAM,MAMd,QAAuB8E,IAApBS,GAAiCA,IAAoBpF,EAAW,CACjE,IAAI3B,EAAQ,GAOZ,OANG0B,EAAK1B,MAAMC,OAAS,IACrBD,EAAQA,EAAM0G,OAAOhF,EAAK1B,MAAM2G,MAAM,GAAG,KAExCjF,EAAK1B,MAAMC,OAAS,GACrBD,EAAMwF,KAAKe,OAAOC,OAAQ,GAAI9E,EAAK1B,MAAM0B,EAAK1B,MAAMC,OAAO,GAAI,CAACsB,QAAQ,EAAMC,MAAM,KAE/E,CACLS,MAAM,EACNjC,SAIJ,OAAO0B,KAIb,QACE,OAAO9B,IAyIXsC,QApIqB,WAA2C,IAA1CtC,EAAyC,uDAAjCqG,EAAa/D,QAASkE,EAAW,uCAC/D,OAAQA,EAAOvE,MACb,IAAK,aAAc,CACjB,SAAS+E,EAAMC,EAAYC,GACzB,YAAkBR,IAAfO,GAAmD,MAAvBC,EAAY3F,aAGzBmF,IAAfO,KAKuB,MAAtBA,EAAW1F,QAAyC,MAAvB2F,EAAY3F,QACnB,MAAtB0F,EAAW1F,QAAyC,MAAvB2F,EAAY3F,QACnB,MAAtB0F,EAAW1F,QAAyC,KAAvB2F,EAAY3F,QACzC0F,EAAW1F,SAAW2F,EAAY3F,OAAS,MAGxC0F,EAAW3F,OAASzB,GAAgBoH,EAAW3F,OAASzB,KACxDqH,EAAY5F,OAASzB,GAAiBqH,EAAY5F,OAASzB,KAG3DoH,EAAW3F,OAASzB,GAAiBoH,EAAW3F,OAASzB,KACzDqH,EAAY5F,OAASzB,GAAgBqH,EAAY5F,OAASzB,KAMnE,IAAIqH,EAAc,CAAC5F,KAAMkF,EAAOlF,KAAMC,OAAQiF,EAAOjF,QACrD,OAAOvB,EAAMiB,KACX,SAAAa,GAAI,MAAK,CACPO,KAAM2E,EAAMlF,EAAK1B,MAAM0B,EAAK1B,MAAMC,OAAO,GAAI6G,GAC7C9G,MAAM,YAAK0B,EAAK1B,WAItB,IAAK,WACH,OAAOJ,EAAMiB,KACX,SAAAa,GAAI,MAAK,CACPO,MAAM,EACNjC,MAAM,YAAK0B,EAAK1B,WAItB,IAAK,OAAQ,CACX,SAAS4G,EAAM9F,EAAMI,EAAMC,GACzB,YAAgBmF,IAATxF,GAAsBA,EAAKI,OAASA,GAAQJ,EAAKK,SAAWA,EAF1D,MAKsCvB,EAAMqH,QACrD,SAACC,EAAaC,GACZ,IAAMrF,EAAQqF,EAAYnH,MAAMgH,WAAU,SAAAlG,GAAI,OAAI8F,EAAM9F,EAAMsF,EAAOlF,KAAMkF,EAAOjF,WAClF,IAAc,IAAXW,EAAc,CACf,IAAI9B,EAAQ,GACT8B,EAAQ,IACT9B,EAAQA,EAAM0G,OAAOS,EAAYnH,MAAM2G,MAAM,EAAG7E,EAAQ,GAAGjB,KACzD,SAAAC,GAAI,MAAK,CACPI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,OAAQR,EAAKQ,OACbC,OAAQT,EAAKS,OACbC,MAAM,QAITM,EAAQ,GACT9B,EAAMwF,KAAKe,OAAOC,OAAQ,GAAIW,EAAYnH,MAAM8B,EAAQ,GAAI,CAC1DP,QAAQ,EACRC,MAAM,KAGV0F,EAAY,GAAG1B,KAAK,CAClBvD,MAAM,EACNjC,UAEFkH,EAAY,GAAKC,EAAYnH,MAAM2G,MAAM7E,GAAOjB,KAC9C,SAAAC,GAAI,MAAK,CACPI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,QAAQ,EACRC,QAAQ,EACRC,KAAMV,EAAKU,cAIf0F,EAAY,GAAG1B,KAAK2B,GAEtB,OAAOD,IAET,CACE,GAGA,CAEE,CACEhG,KAAMkF,EAAOlF,KACbC,OAAQiF,EAAOjF,OACfG,QAAQ,EACRC,QAAQ,EACRC,MAAM,MAxDH,mBAKJ4F,EALI,KAKuBC,EALvB,KA6DX,OAAGjB,EAAOhB,iBAAmB3F,GAC3B2H,EAA0BhB,EAAOf,iBAAmB,CAClDpD,MAAM,EACNjC,MAAOoH,EAA0BhB,EAAOf,iBAAiBrF,MAAMa,KAC7D,SAAAC,GAAI,MAAK,CACPI,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbG,OAAQR,EAAKQ,OACbC,OAAQT,EAAKS,OACbC,MAAM,MAERkF,OAAOW,IAEJD,GAEFA,EAET,QACE,OAAOxH,MAWb,OAAO0H,YAAYpB,GAvWN,GAoXAqB,MARf,WACE,OACE,kBAAC,IAAD,CAAUjC,MAAOA,GACf,kBAAC5F,EAAD,QCztBN8H,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.041b555f.chunk.js","sourcesContent":["import React from 'react';\nimport { createStore, combineReducers } from  'redux';\nimport { connect, Provider } from 'react-redux'\nimport './App.css';\n\nconst consts = {\n  FOUNDATION: 'FOUNDATION',\n  TABLEAU: 'TABLEAU',\n\n  HEART: 'HEART',\n  CLOVER: 'CLOVER',\n  TILE: 'TILE',\n  PIKE: 'PIKE'\n}\n\n/*********\n * REACT\n **********/\nconst Game = (() => {\n  const UnconnectedGame = ({congratulation}) => (\n    <div id='container'>\n      <div className='header'>\n        <Stock />\n        <Foundation />\n      </div>\n      <Tableau />\n      <div className='congratulation'\n           style={{visibility: congratulation ? 'visible' : 'hidden'}}>\n        <h1>you did it!, check my <a href=\"https://github.com/jsgalvish\">Github</a> for more</h1>\n      </div>\n    </div>\n  );\n  const mapStateToProps = (state, ownProps) => {\n    return {\n      congratulation: (\n        state.foundation[0].cards.length === 13 &&\n        state.foundation[1].cards.length === 13 &&\n        state.foundation[2].cards.length === 13 &&\n        state.foundation[3].cards.length === 13\n      )\n    }\n  }\n\n  return connect(mapStateToProps)(UnconnectedGame);\n})();\n\nconst Stock = (() => {\n  const UnconnectedStock = ({rest, flopped}) => (\n    <div className='stock'>\n      <div className='rest'>\n        {rest.map(card => (\n          <div className='cardContainer'\n               key={JSON.stringify({suit:card.suit,number:card.number})}>\n            <Card key={JSON.stringify({suit:card.suit,number:card.number})}\n                  suit={card.suit} number={card.number}\n                  stack={true}\n                  turned={card.turned} locked={card.locked} last={false}/>\n          </div>\n        ))}\n      </div>\n      <div className='flop'>\n        {flopped.map(card => (\n          <div className='cardContainer'\n               key={JSON.stringify({suit:card.suit,number:card.number})}>\n            <Card key={JSON.stringify({suit:card.suit,number:card.number})}\n                  suit={card.suit} number={card.number}\n                  stack={true}\n                  turned={card.turned} locked={card.locked} last={card.last}/>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const mapStateToProps = (state, ownProps) => {\n    return {\n      rest: state.stock.rest,\n      flopped: state.stock.flopped,\n    }\n  }\n\n  return connect(mapStateToProps)(UnconnectedStock);\n})();\n\nconst Foundation = (() => {\n  const UnconnectedFoundation = ({piles}) => (\n    <div className='foundation'>\n      {piles.map((pile, pileIndex) => (\n        <div className='pile' key={pileIndex}>\n          {pile.cards.map(card => (\n            <div className='cardContainer'\n                 key={JSON.stringify({suit:card.suit,number:card.number})}>\n              <Card key={JSON.stringify({suit:card.suit,number:card.number})}\n                    suit={card.suit} number={card.number}\n                    turned={card.turned} locked={card.locked} last={card.last}/>\n            </div>\n          ))}\n          <DropSite key={JSON.stringify({type:consts.FOUNDATION,index:pileIndex})}\n                    pileType={consts.FOUNDATION} pileIndex={pileIndex} visible={pile.drop}/>\n        </div>\n      ))}\n    </div>\n  );\n\n  const mapStateToProps = (state, ownProps) => {\n    return {\n      piles: state.foundation\n    }\n  }\n\n  return connect(mapStateToProps)(UnconnectedFoundation);\n})();\n\nconst Tableau = (() => {\n  const UnconnectedTableau = ({piles}) => (\n    <div className='tableau'>\n      {piles.map((pile, pileIndex) => (\n        <div className='pile' key={pileIndex}>\n          {pile.cards.map((card, index) => (\n            <div className='cardContainer'\n                 key={JSON.stringify({suit:card.suit,number:card.number})}>\n              <Card key={JSON.stringify({suit:card.suit,number:card.number})}\n                    suit={card.suit} number={card.number}\n                    stack={false}\n                    turned={card.turned} locked={card.locked} last={card.last}/>\n            </div>\n          ))}\n          <DropSite key={JSON.stringify({type:consts.TABLEAU,index:pileIndex})}\n                    pileType={consts.TABLEAU} pileIndex={pileIndex} visible={pile.drop}/>\n        </div>\n      ))}\n    </div>\n  );\n\n  const mapStateToProps = (state, ownProps) => {\n    return {\n      piles: state.tableau\n    }\n  }\n\n  return connect(mapStateToProps)(UnconnectedTableau);\n})();\n\n\n/*********\n * React: Card\n *********/\nconst Card = (() => {\n  class UnconnectedCard extends React.Component {\n    constructor({suit, number, stack, turned, locked, last}) {\n      super({suit, number, stack, turned, locked, last});\n\n      this.state = {\n        rotation: turned ? 0 : -180\n      };\n\n      this.turn = this.turn.bind(this);\n      this.dragStart = this.dragStart.bind(this);\n      this.dragEnd = this.dragEnd.bind(this);\n    }\n\n    turn() {\n      if(this.props.stack === true) {\n        this.props.flop();\n      }else{\n        if(this.props.turned === true || this.props.locked) {\n          return;\n        }\n\n        let lastTime = null;\n\n        const slideBackAnimation = (time => {\n          let rotation = null;\n          if(lastTime !== null) {\n            const delta = (time - lastTime) * 0.4;\n            rotation = Math.min(0, this.state.rotation + delta);\n            this.setState({rotation});\n          }\n          lastTime = time;\n          if(rotation !== 0) requestAnimationFrame(slideBackAnimation);\n        }).bind(this);\n\n        requestAnimationFrame(slideBackAnimation);\n      }\n    }\n\n    dragStart(ev) {\n      ev.dataTransfer.setData('text/plain', JSON.stringify({\n        suit: this.props.suit,\n        number: this.props.number\n      }));\n      this.props.dragStart();\n    }\n\n    dragEnd(ev) {\n      this.props.dragEnd();\n    }\n\n    render() {\n      let suit;\n      switch(this.props.suit) {\n        case consts.HEART:\n          suit = <Heart />;\n          break;\n        case consts.TILE:\n          suit = <Tile />;\n          break;\n        case consts.CLOVER:\n          suit = <Clover />;\n          break;\n        case consts.PIKE:\n          suit = <Pike />;\n          break;\n      }\n      return (\n        <div className='card'>\n          <div className='cardFace frontFace'\n               style={{transform: `rotateY(${this.state.rotation}deg)`}}\n               draggable={this.props.locked === false}\n               onDragStart={this.dragStart}\n               onDragEnd={this.dragEnd}>\n            <div>\n              <h1 className={this.props.suit}>{this.props.number}</h1>\n              {suit}\n            </div>\n          </div>\n          <div className={'cardFace backFace' + (this.props.locked === false ? ' pointer' : '')}\n               style={{transform: `rotateY(${this.state.rotation+180}deg)`}}\n               onClick={this.turn}/>\n        </div>\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n      dragStart: () => {\n        dispatch({\n          type: 'DRAG_START',\n          suit: ownProps.suit,\n          number: ownProps.number,\n          last: ownProps.last\n        });\n      },\n      dragEnd: () => {\n        dispatch({ type: 'DRAG_END' });\n      },\n      flop: () => {\n        dispatch({ type: 'FLOP' });\n      },\n    }\n  }\n  return connect(null, mapDispatchToProps)(UnconnectedCard);\n})();\n\nconst Heart = ({zoom = false}) => (\n  <svg className='suitIcon'\n       width={zoom === true ? 40 : 20} height={zoom === true ? 40 : 20}\n       viewBox='0 0 20 20'>\n    <path className='heart'\n          d='\n         M 0 6\n         A 2.5 2.5 0 0 1 10 6\n         A 2.5 2.5 0 0 1 20 6\n         Q 16 14 10 19\n         Q 4 14 0 6' />\n  </svg>\n);\n\nconst Tile = ({zoom = false}) => (\n  <svg className='suitIcon'\n       width={zoom === true ? 40 : 20} height={zoom === true ? 40 : 20}\n       viewBox='0 0 20 20'>\n    <path className='tile'\n          d='\n         M 10 0\n         Q 13 5 17 10\n         Q 13 15 10 20\n         Q 7 15 3 10\n         Q 7 5 10 0' />\n  </svg>\n);\n\nconst Clover = ({zoom = false}) => (\n  <svg className='suitIcon'\n       width={zoom === true ? 40 : 20} height={zoom === true ? 40 : 20}\n       viewBox='0 0 20 20'>\n    <circle className='clover' cx='10' cy='5' r='4.5' />\n    <circle className='clover' cx='5' cy='11' r='4.5' />\n    <circle className='clover' cx='15' cy='11' r='4.5' />\n    <polygon className='clover' points='10 10, 13 20, 7 20' />\n  </svg>\n);\n\nconst Pike = ({zoom = false}) => (\n  <svg className='suitIcon'\n       width={zoom === true ? 40 : 20} height={zoom === true ? 40 : 20}\n       viewBox='0 0 20 20'>\n    <path className='pike'\n          d='\n         M 0 12\n         A 2.5 2.5 0 0 0 10 12\n         A 2.5 2.5 0 0 0 20 12\n         Q 16 4 10 0\n         Q 4 4 0 12' />\n    <polygon className='pike' points='10 10, 13 20, 7 20' />\n  </svg>\n);\n\n/*********\n * React: Drop Site\n *********/\nconst DropSite = (() => {\n  class UnconnectedDropSite extends React.Component {\n    constructor({pileType, pileIndex, visible, drop}) {\n      super({pileType, pileIndex, visible, drop});\n\n      this.allowDrop = this.allowDrop.bind(this);\n      this.drop = this.drop.bind(this);\n    }\n\n    allowDrop(ev) {\n      ev.preventDefault();\n    }\n\n    drop(ev) {\n      ev.preventDefault();\n      let data = JSON.parse(ev.dataTransfer.getData(\"text\"));\n      this.props.drop(data.suit, data.number);\n    }\n\n    render() {\n      return (\n        <div className='dropTarget'\n             style={{visibility: this.props.visible ? 'visible' : 'hidden'}}\n             onDrop={this.drop} onDragOver={this.allowDrop}>\n          <h1>\n            +\n          </h1>\n        </div>\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n      drop: (suit, number) => {\n        dispatch({\n          type: 'DRAG_END'\n        });\n        dispatch({\n          type: 'DROP',\n          targetPileType: ownProps.pileType,\n          targetPileIndex: ownProps.pileIndex,\n          suit,\n          number\n        });\n      }\n    }\n  }\n  return connect(null, mapDispatchToProps)(UnconnectedDropSite);\n})();\n\n/*********\n * REDUX: Store\n **********/\nconst store = (() => {\n  let cards = (() => {\n    function deck() {\n      let cards = [];\n      for(let i = 2; i <= 14; i++) {\n        let number = i;\n        if(i === 11) number = 'J';\n        if(i === 12) number = 'Q';\n        if(i === 13) number = 'K';\n        if(i === 14) number = 'A';\n        cards.push({suit: consts.HEART, number});\n        cards.push({suit: consts.TILE, number});\n        cards.push({suit: consts.CLOVER, number});\n        cards.push({suit: consts.PIKE, number});\n      }\n      return cards;\n    }\n\n    function shuffle(a) {\n      for (let i = a.length; i; i--) {\n        let j = Math.floor(Math.random() * i);\n        [a[i - 1], a[j]] = [a[j], a[i - 1]];\n      }\n    }\n\n    let cards = deck();\n    shuffle(cards);\n    return cards;\n  })();\n\n  function pop(cards, turned = false) {\n    if(turned) {\n      return {...cards.shift(), turned: true, locked: false, last: true};\n    }else{\n      return {...cards.shift(), turned: false, locked: true, last: false};\n    }\n  }\n\n  const initialState = {\n    tableau: [\n      {drop: false, cards: [pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards), pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards), pop(cards), pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards), pop(cards), pop(cards), pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards), pop(cards), pop(cards), pop(cards), pop(cards, true)]},\n      {drop: false, cards: [pop(cards), pop(cards), pop(cards), pop(cards), pop(cards), pop(cards), pop(cards, true)]},\n    ],\n    stock: {\n      rest: [...cards.map(card => ({\n        suit: card.suit,\n        number: card.number,\n        turned: false,\n        locked: false,\n        last: false\n      }))],\n      flopped: [],\n    },\n    foundation: [\n      {drop: false, cards: []},\n      {drop: false, cards: []},\n      {drop: false, cards: []},\n      {drop: false, cards: []}\n    ]\n  };\n\n  const stockReducer = (state = initialState.stock, action) => {\n    switch (action.type) {\n      case 'FLOP': {\n        const rest = [\n          ...state.flopped.map(\n            card => ({\n              suit: card.suit,\n              number: card.number,\n              turned: false,\n              locked: false\n            })\n          ),\n          ...state.rest\n        ];\n\n        let flopped = [];\n        const first = rest.pop();\n        if(first !== undefined) {\n          flopped.push(Object.assign({}, first, {turned: true, locked: false, last: true}));\n        }\n\n        return {\n          rest,\n          flopped\n        };\n      }\n      case 'DROP': {\n        const topFlop = state.flopped[state.flopped.length - 1];\n        if(topFlop !== undefined && topFlop.suit === action.suit && topFlop.number === action.number) {\n          // The top of the flopped cards has been moved\n          let flopped = [];\n          if(state.flopped.length > 2) {\n            flopped = flopped.concat(state.flopped.slice(0, -2));\n          }\n          if(state.flopped.length > 1) {\n            flopped.push(Object.assign(\n              {},\n              state.flopped[state.flopped.length-2],\n              {\n                locked: false,\n                last: true\n              }\n            ));\n          }\n          return {\n            rest: state.rest,\n            flopped,\n          };\n\n        }\n        return state;\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n\n  const foundationReducer = (state = initialState.foundation, action) => {\n    switch (action.type) {\n      case 'DRAG_START': {\n        if(action.last !== true) {\n          return state;\n        }\n        function match(targetCard, draggedCard) {\n          if(targetCard === undefined && draggedCard.number === 'A') {\n            return true;\n          }\n          if(targetCard === undefined) {\n            return false;\n          }\n          return (targetCard.suit === draggedCard.suit) &&\n            (\n              targetCard.number === 'A' && draggedCard.number === 2 ||\n              targetCard.number === 10 && draggedCard.number === 'J' ||\n              targetCard.number === 'J' && draggedCard.number === 'Q' ||\n              targetCard.number === 'Q' && draggedCard.number === 'K' ||\n              targetCard.number + 1 === draggedCard.number\n            )\n        }\n\n        let draggedCard = {suit: action.suit, number: action.number};\n        return state.map(\n          pile => ({\n            drop: match(pile.cards[pile.cards.length-1], draggedCard),\n            cards: [...pile.cards]\n          })\n        );\n      }\n      case 'DRAG_END': {\n        return state.map(\n          pile => ({\n            drop: false,\n            cards: [...pile.cards]\n          })\n        );\n      }\n      case 'DROP': {\n        function match(card, suit, number) {\n          return card !== undefined && card.suit === suit && card.number === number;\n        }\n\n        // Check if the moved card belonged to the foundation piles\n        const sourcePileIndex = state.findIndex(\n          pile => match(pile.cards[pile.cards.length-1], action.suit, action.number)\n        );\n\n        return state.map(\n          (pile, pileIndex) => {\n            // Add the card to the corresponding pile if the target is a foundation pile\n            if(action.targetPileType === consts.FOUNDATION && action.targetPileIndex === pileIndex) {\n              return {\n                drop: false,\n                cards: [\n                  ...pile.cards.map(\n                    card => ({\n                      suit: card.suit,\n                      number: card.number,\n                      turned: true,\n                      locked: true,\n                      last: false\n                    })\n                  ),\n                  {\n                    suit: action.suit,\n                    number: action.number,\n                    turned: true,\n                    locked: false,\n                    last: true\n                  }\n                ]\n              };\n            }\n            // Remove the card from if it has been part of a foundation pile\n            if(sourcePileIndex !== undefined && sourcePileIndex === pileIndex) {\n              let cards = [];\n              if(pile.cards.length > 2) {\n                cards = cards.concat(pile.cards.slice(0,-2));\n              }\n              if(pile.cards.length > 1) {\n                cards.push(Object.assign( {}, pile.cards[pile.cards.length-2], {locked: false,last: true} ));\n              }\n              return {\n                drop: false,\n                cards\n              };\n            }\n            // Return the pile unchanged if it has not been affected by the drop\n            return pile;\n          }\n        );\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n\n  const tableauReducer = (state = initialState.tableau, action) => {\n    switch (action.type) {\n      case 'DRAG_START': {\n        function match(targetCard, draggedCard) {\n          if(targetCard === undefined && draggedCard.number === 'K') {\n            return true;\n          }\n          if(targetCard === undefined) {\n            return false;\n          }\n          return (\n            (\n              targetCard.number === 'K' && draggedCard.number === 'Q' ||\n              targetCard.number === 'Q' && draggedCard.number === 'J' ||\n              targetCard.number === 'J' && draggedCard.number === 10 ||\n              targetCard.number === draggedCard.number + 1\n            ) && (\n              (\n                (targetCard.suit === consts.HEART || targetCard.suit === consts.TILE) &&\n                (draggedCard.suit === consts.CLOVER || draggedCard.suit === consts.PIKE)\n              ) ||\n              (\n                (targetCard.suit === consts.CLOVER || targetCard.suit === consts.PIKE) &&\n                (draggedCard.suit === consts.HEART || draggedCard.suit === consts.TILE)\n              )\n            )\n          );\n        }\n\n        let draggedCard = {suit: action.suit, number: action.number};\n        return state.map(\n          pile => ({\n            drop: match(pile.cards[pile.cards.length-1], draggedCard),\n            cards: [...pile.cards]\n          })\n        );\n      }\n      case 'DRAG_END': {\n        return state.map(\n          pile => ({\n            drop: false,\n            cards: [...pile.cards]\n          })\n        );\n      }\n      case 'DROP': {\n        function match(card, suit, number) {\n          return card !== undefined && card.suit === suit && card.number === number;\n        }\n\n        const [tableauWithoutMovingCards, movingCards] = state.reduce(\n          (accumulated, currentPile) => {\n            const index = currentPile.cards.findIndex(card => match(card, action.suit, action.number));\n            if(index !== -1) {\n              let cards = [];\n              if(index > 1) {\n                cards = cards.concat(currentPile.cards.slice(0, index - 1).map(\n                  card => ({\n                    suit: card.suit,\n                    number: card.number,\n                    turned: card.turned,\n                    locked: card.locked,\n                    last: false\n                  })\n                ));\n              }\n              if(index > 0) {\n                cards.push(Object.assign( {}, currentPile.cards[index - 1], {\n                  locked: false,\n                  last: true\n                } ));\n              }\n              accumulated[0].push({\n                drop: false,\n                cards\n              });\n              accumulated[1] = currentPile.cards.slice(index).map(\n                card => ({\n                  suit: card.suit,\n                  number: card.number,\n                  turned: true,\n                  locked: false,\n                  last: card.last\n                })\n              );\n            }else{\n              accumulated[0].push(currentPile);\n            }\n            return accumulated;\n          },\n          [\n            [\n              // Tableau without moving cards\n            ],\n            [\n              // Moving cards default (overwritten if source found in a tableau pile)\n              {\n                suit: action.suit,\n                number: action.number,\n                turned: true,\n                locked: false,\n                last: true\n              }\n            ]\n          ]\n        );\n        if(action.targetPileType === consts.TABLEAU) {\n          tableauWithoutMovingCards[action.targetPileIndex] = {\n            drop: false,\n            cards: tableauWithoutMovingCards[action.targetPileIndex].cards.map(\n              card => ({\n                suit: card.suit,\n                number: card.number,\n                turned: card.turned,\n                locked: card.locked,\n                last: false\n              })\n            ).concat(movingCards)\n          };\n          return tableauWithoutMovingCards;\n        }\n        return tableauWithoutMovingCards;\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n\n  const mainReducer = combineReducers({\n    stock: stockReducer,\n    foundation: foundationReducer,\n    tableau: tableauReducer\n  });\n\n  return createStore(mainReducer);\n})();\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById('root'));\n"],"sourceRoot":""}